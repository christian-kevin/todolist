# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="6aMnR=`;mAyoKOYcw92peHEW5qTtfFPmHwVlKrUjiHcWA5``6ccc`JwyI5fV`?Q;"

# The application languages
# ~~~~~
application.langs="en"

compressAssets = false

# play.filters.cors {
#   allowedHttpMethods = ["GET", "POST"]
#   allowedOrigins = ["http://localhost:3000", "http://localhost:3100"]
# }

assets.url = "http://localhost:9000/assets/"
assets.local.path = "public/"

recurring.jobs.enabled = false

httpsRedirect.enabled = false

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# config.resource=prod.conf

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#

# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName=DefaultDS

db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost:3306/todolist?characterEncoding=utf8"
db.default.username=root
db.default.password=12345

jpa.default=defaultPersistenceUnit

play.http.session.maxAge = 604800000

play.http.actionComposition.controllerAnnotationsFirst = true

play.db.prototype.hikaricp.transactionIsolation = TRANSACTION_READ_UNCOMMITTED
play.db.prototype.hikaricp.maximumPoolSize = 50

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .


cloudfront.version="l0c4lh05t"

akka {
  actor {
    default-dispatcher {
      # This will be used if you have set "executor = "fork-join-executor""
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 4

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 32.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
    }
  }
}

//contexts {
//  db-access {
//    fork-join-executor {
//      parallelism-factor = 10.0
//    }
//  }
//  web-service {
//    fork-join-executor {
//      parallelism-factor= 5.0
//    }
//  }
//  expensive-cpu-operations {
//    fork-join-executor {
//      parallelism-max = 2
//    }
//  }
//}


tapfiliate.enabled = false

google.conversion.tracking.enabled = false

google.experiments.enabled = false

mixpanel.enabled = false

crazy-eggs.enabled = false

combine-js.enabled = false

host.url = "localhost:9000"

prettifyErrorPage = false

criteo.enabled = false

compress.html = false

eaccounting.api-enabled = false

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=sellerRecruit.Routes

